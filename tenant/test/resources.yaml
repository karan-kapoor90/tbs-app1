apiVersion: v1
kind: Namespace
metadata:
  name: default-tenant
---
apiVersion: v1
data:
  id: id
  name: tenant-name
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: tenant-identity
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tier: web
  name: default-details-svc
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30879
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: default-details
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    tier: app
  name: default-details
spec:
  replicas: 3
  selector:
    matchLabels:
      app: default-details
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: default-details
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: default-identity
        image: karankapoor/multi-tenant:karan
        imagePullPolicy: Always
        name: default-details
        ports:
        - containerPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: default-ws
spec:
  rules:
  - host: app.my-pks.karankapoor.in
    http:
      paths:
      - backend:
          serviceName: default-details-svc
          servicePort: 3000
        path: /v1(/|$)(.*)
